version: 2.1

orbs:
  apex: circleci/salesforce-sfdx@<<pipeline.parameters.dev-orb-version>>
  orb-tools: circleci/orb-tools@9.0

parameters:
  run-integration-tests:
    type: boolean
    default: false
  dev-orb-version:
    type: string
    default: "dev:alpha"

jobs:
  integration-install_cli_tar:
    executor: sfdx/default
    working_directory: ~/project/sample
    steps:
      - sfdx/install

  integration-install_cli_npm:
    executor: sfdx/default
    working_directory: ~/project
    steps:
      - sfdx/install:
          version: latest

  integration-install_authenticate:
    executor: sfdx/default
    working_directory: ~/project
    steps:
      - sfdx/install
      - sfdx/auth:
          defaultusername: gabriel@circleci.cpe
      - run:
          name: Check Auth List
          command: sfdx force:auth:list

  integration-scratch_functions:
    executor: sfdx/default
    working_directory: ~/project
    steps:
      - checkout
      - sfdx/install
      - sfdx/auth:
          defaultusername: gabriel@circleci.cpe
      - sfdx/scratch-create:
          scratch-config: "./sample/scratch-def.json"
          scratch-alias: "circleci"
      - sfdx/scratch-open:
          scratch-alias: "circleci"
      - sfdx/scratch-delete:
          scratch-alias: "circleci"

workflows:
  # This `lint-pack_validate_publish-dev` workflow will run on any commit.
  lint_pack-validate_publish-dev:
    unless: << pipeline.parameters.run-integration-tests >>
    jobs:
      - orb-tools/lint
      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing.
      # orb will be published as dev:alpha and dev:${CIRCLE_SHA1:0:7}.
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: circleci/salesforce-sfdx
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the
      # dev:${CIRCLE_SHA1:0:7} version of your orb
      - orb-tools/trigger-integration-tests-workflow:
          name: trigger-integration-dev
          requires:
            - orb-tools/publish-dev

  # This `integration-tests_prod-release` workflow will only run
  # when the run-integration-tests pipeline parameter is set to true.
  # It is meant to be triggered by the "trigger-integration-tests-workflow"
  # job, and run tests on <your orb>@dev:${CIRCLE_SHA1:0:7}.
  integration-tests_prod-release:
    when: << pipeline.parameters.run-integration-tests >>
    jobs:
      # your integration test jobs go here: essentially, run all your orb's
      # jobs and commands to ensure they behave as expected. or, run other
      # integration tests of your choosing

      - integration-install_cli_tar
      - integration-install_cli_npm
      - integration-install_authenticate
      - integration-scratch_functions

      # publish a semver version of the orb. relies on
      # the commit subject containing the text "[semver:patch|minor|major|skip]"
      # as that will determine whether a patch, minor or major
      # version will be published or if publishing should
      # be skipped.
      # e.g. [semver:patch] will cause a patch version to be published.
      - orb-tools/dev-promote-prod-from-commit-subject:
          orb-name: circleci/salesforce-sfdx
          context: orb-publishing
          add-pr-comment: true
          bot-token-variable: GHI_TOKEN
          bot-user: cpe-bot
          fail-if-semver-not-indicated: true
          publish-version-tag: true
          ssh-fingerprints: af:51:88:95:26:d1:4c:8a:7b:16:da:12:25:ce:ec:40

          requires:
            - integration-install_cli_tar
            - integration-install_cli_npm
            - integration-install_authenticate
            - integration-scratch_functions
          filters:
            branches:
              only: master
