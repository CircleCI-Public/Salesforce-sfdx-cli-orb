commands:
  auth:
    description: |
      'Authenticate with and configure teh SFDX CLI after installation.'
    parameters:
      apiVersion:
        default: ""
        description: The API version for a specific project or all projects. Normally,
          the Salesforce CLI assumes that you’re using the same version of the CLI
          as the Dev Hub org.
        type: string
      clientid:
        description: The client ID of the connected app for salesforce.
        type: string
      defaultdevhubusername:
        default: ""
        description: The username of your Dev Hub org that the force:org:create command
          defaults to.
        type: string
      defaultusername:
        default: ""
        description: The username for an org that all commands run against by default.
        type: string
      instanceUrl:
        default: ""
        description: The URL of the Salesforce instance that is hosting your org.
        type: string
      jwtKey:
        description: 'Path to the server.key file. Example: "./assets.server.key"'
        type: string
    steps:
    - run:
        command: |
          <<#parameters.instanceUrl>>sfdx force:config:set instanceUrl=<<parameters.instanceUrl>><</parameters.instanceUrl>> --global
          sfdx force:auth:jwt:grant --clientid <<parameters.clientid>> \
          --jwtkeyfile <<parameters.jwtKey>> --username <<parameters.defaultusername>> \
          --setdefaultdevhubusername --setalias <<parameters.defaultdevhubusername>>
          <<#parameters.apiVersion>>sfdx force:config:set apiVersion=<<parameters.apiVersion>><</parameters.apiVersion>>
        name: Authenticating with SFDX and configuring.
  install:
    description: |
      'Install and configure the Salesforce "sfdx" cli utility giving access to the "sfdx" command. Set parameters to automatically set the sfdx config values. Also able to be set via environment variables. Learn more: https://developer.salesforce.com/docs/atlas.en-us.sfdx_dev.meta/sfdx_dev/sfdx_dev_cli_config_values.htm'
    parameters:
      version:
        default: ""
        description: By default, the latest version of the standalone CLI will be
          installed. To install via npm, supply a version tag such as "latest" or
          "6".
        type: string
    steps:
    - when:
        condition: <<parameters.version>>
        steps:
        - run:
            command: |
              cd /tmp
              wget https://developer.salesforce.com/media/salesforce-cli/sfdx-linux-amd64.tar.xz
              mkdir sfdx
              tar xJf sfdx-linux-amd64.tar.xz -C sfdx --strip-components 1
              ./sfdx/install
            name: Install SFDX - Standalone
    - unless:
        condition: <<parameters.version>>
        steps:
        - run:
            command: |
              command -v npm >/dev/null 2>&1 || { echo >&2 "NPM not installed in the current environment.  Aborting."; exit 1; }
              npm install sfdx-cli@<<parameters.version>> --global
            name: Install SFDX - NPM
    - run:
        command: sfdx --version
        name: Verify SFDX installation
description: |
  Sample orb description # What will your orb allow users to do? # Descriptions should be short, simple, and clear.
examples:
  example:
    description: |
      Sample example description. # What will this example document? # Descriptions should be short, simple, and clear.
    usage:
      jobs:
        build:
          machine: true
          steps:
          - foo/hello:
              username: Anna
      orbs:
        foo: bar/foo@1.2.3
      version: 2.1
executors:
  default:
    description: |
      'cimg/node is a Docker image created by CircleCI with continuous integration builds in mind. Each tag contains a version of Node.js, npm, yarn, and any binaries and tools that are required for builds to complete successfully in a CircleCI environment. https://github.com/CircleCI-Public/cimg-node'
    docker:
    - image: cimg/node:<<parameters.tag>>
    parameters:
      tag:
        default: "12.6"
        description: |
          Pick a specific circleci/node image variant: https://hub.docker.com/r/cimg/node
        type: string
jobs:
  scratch-deploy:
    description: |
      'An opinionated automation job for deploying your salesforce application to a scratch organization. This job installs the SFDX CLI contains a series of commands that can be quickly implemented to launch your app to a new scratch organization. Reference: https://github.com/trailheadapps/ebikes-lwc'
    executor: default
    parameters:
      cli-version:
        default: ""
        description: By default, the latest version of the standalone CLI will be
          installed. To install via npm, supply a version tag such as "latest" or
          "6".
        type: string
      deploydir:
        description: The root of the directory tree that contains the files to deploy.
          The root must contain a valid package.xml file describing the entities in
          the directory structure.
        type: string
      permset:
        description: 'Assign a pre-defined permission set to the default user. Learn
          more: https://help.salesforce.com/articleView?id=perm_sets_create.htm&type=5'
        type: string
      sampledata-path:
        description: 'Path location to sample data json file. Example: ./data/sample-data-plan.json'
        type: string
      scratch-alias:
        description: Setting an alias each time you create a scratch org is a great
          way to track the scratch org’s function. And it’s much easier to remember
          when issuing subsequent CLI commands.
        type: string
      scratch-def:
        description: Full path to scratch org definition json file. Example:'config/project-scratch-def.json'
        type: string
    steps:
    - install:
        version: <<parameters.cli-version>>
    - run:
        command: sfdx force:org:create -s -f <<parameters.scratch-def>> -a <<parameters.scratch-alias>>
        name: Create Scratch Org
    - run:
        command: sfdx force:source:push
        name: Push App To Scratch Org
    - run:
        command: sfdx force:user:permset:assign -n <<parameters.permset>>
        name: Assign Permissions
    - run:
        command: sfdx force:data:tree:import --plan <<parameters.sampledata-path>>
        name: Load Sample Data
    - run:
        command: sfdx force:mdapi:deploy -u <<parameters.scratch-alias>> --deploydir
          <<parameters.deploydir>>
        name: Deploy Community metadata
    - run:
        command: sfdx force:org:open
        name: Open Scratch Org
orbs:
  hello: circleci/hello-build@0.0.5
version: 2.1

